parser.package: name.martingeisse.mahdl.simulator.parser
parser.class: MapagGeneratedMahdlParser
parser.fileElementType: name.martingeisse.mahdl.simulator.parser.MahdlParserDefinition.FILE_ELEMENT_TYPE
symbolHolder.generate: true
symbolHolder.package: name.martingeisse.mahdl.simulator.parser
symbolHolder.class: Symbols
symbol.elementType.class: MahdlElementType
psi.generate: true
psi.package: name.martingeisse.mahdl.simulator.parser.psi
psi.utilClass: name.martingeisse.mahdl.simulator.parser.psi.PsiUtil
psi.supports.psiNameIdentifierOwner: Module, PortDefinition, SignalLikeDefinition, ModuleInstanceDefinition
psi.supports.psiNamedElement: Module
psi.supports.getReference: QualifiedModuleName, InstancePortName, Expression_Identifier, InstanceReferenceName
psi.supports.safeDelete: Module, PortDefinition, SignalLikeDefinition, ModuleInstanceDefinition
context.parserDefinitionClass: name.martingeisse.mahdl.simulator.parser.MahdlParserDefinition

parser.error.OPENING_PARENTHESIS: (
parser.error.CLOSING_PARENTHESIS: )
parser.error.OPENING_SQUARE_BRACKET: [
parser.error.CLOSING_SQUARE_BRACKET: ]
parser.error.OPENING_CURLY_BRACE: {
parser.error.CLOSING_CURLY_BRACE: }
   
parser.error.DOT: .
parser.error.COLON: :
parser.error.SEMICOLON: ;
parser.error.COMMA: ,
parser.error.EQUALS: =

parser.error.OP_NOT: ~
parser.error.OP_AND: &
parser.error.OP_OR: |
parser.error.OP_XOR: ^
parser.error.OP_SHIFT_LEFT: <<
parser.error.OP_SHIFT_RIGHT: >>
parser.error.OP_PLUS: +
parser.error.OP_MINUS: -
parser.error.OP_TIMES: *
parser.error.OP_DIVIDED_BY: /
parser.error.OP_REMAINDER: %
parser.error.OP_EQUAL: ==
parser.error.OP_NOT_EQUAL: !=
parser.error.OP_GREATER_THAN: >
parser.error.OP_GREATER_THAN_OR_EQUAL: >=
parser.error.OP_LESS_THAN: <
parser.error.OP_LESS_THAN_OR_EQUAL: <=
parser.error.OP_MUX: ?
parser.error.OP_CONCAT: _

parser.error.KW_NATIVE: native
parser.error.KW_MODULE: module
parser.error.KW_INTERFACE: interface
parser.error.KW_IN: in
parser.error.KW_OUT: out

parser.error.KW_CONSTANT: constant
parser.error.KW_SIGNAL: signal
parser.error.KW_REGISTER: register

parser.error.KW_BIT: bit
parser.error.KW_VECTOR: vector
parser.error.KW_MATRIX: matrix
parser.error.KW_INTEGER: integer
parser.error.KW_TEXT: text

parser.error.KW_DO: do
parser.error.KW_IF: if
parser.error.KW_ELSE: else
parser.error.KW_SWITCH: switch
parser.error.KW_CASE: case
parser.error.KW_DEFAULT: default

parser.error.INTEGER_LITERAL: (integer-literal)
parser.error.VECTOR_LITERAL: (vector-literal)
parser.error.TEXT_LITERAL: (text-literal)
parser.error.IDENTIFIER: (identifier)

psi.implements.Expression_BinaryAnd: BinaryOperation
psi.implements.Expression_BinaryConcat: BinaryOperation
psi.implements.Expression_BinaryDividedBy: BinaryOperation
psi.implements.Expression_BinaryEqual: BinaryOperation
psi.implements.Expression_BinaryGreaterThan: BinaryOperation
psi.implements.Expression_BinaryGreaterThanOrEqual: BinaryOperation
psi.implements.Expression_BinaryLessThan: BinaryOperation
psi.implements.Expression_BinaryLessThanOrEqual: BinaryOperation
psi.implements.Expression_BinaryMinus: BinaryOperation
psi.implements.Expression_BinaryNotEqual: BinaryOperation
psi.implements.Expression_BinaryOr: BinaryOperation
psi.implements.Expression_BinaryPlus: BinaryOperation
psi.implements.Expression_BinaryRemainder: BinaryOperation
psi.implements.Expression_BinaryShiftLeft: BinaryOperation
psi.implements.Expression_BinaryShiftRight: BinaryOperation
psi.implements.Expression_BinaryTimes: BinaryOperation
psi.implements.Expression_BinaryXor: BinaryOperation
psi.implements.Expression_UnaryMinus: UnaryOperation
psi.implements.Expression_UnaryNot: UnaryOperation
psi.implements.Expression_UnaryPlus: UnaryOperation
